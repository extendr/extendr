(function() {var implementors = {};
implementors["extendr_api"] = [{"text":"impl <a class=\"trait\" href=\"extendr_api/trait.DerefMut.html\" title=\"trait extendr_api::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"extendr_api/wrapper/complexes/struct.Complexes.html\" title=\"struct extendr_api::wrapper::complexes::Complexes\">Complexes</a>","synthetic":false,"types":["extendr_api::wrapper::complexes::Complexes"]},{"text":"impl <a class=\"trait\" href=\"extendr_api/trait.DerefMut.html\" title=\"trait extendr_api::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"extendr_api/wrapper/doubles/struct.Doubles.html\" title=\"struct extendr_api::wrapper::doubles::Doubles\">Doubles</a>","synthetic":false,"types":["extendr_api::wrapper::doubles::Doubles"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + 'static&gt; <a class=\"trait\" href=\"extendr_api/trait.DerefMut.html\" title=\"trait extendr_api::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"extendr_api/wrapper/externalptr/struct.ExternalPtr.html\" title=\"struct extendr_api::wrapper::externalptr::ExternalPtr\">ExternalPtr</a>&lt;T&gt;","synthetic":false,"types":["extendr_api::wrapper::externalptr::ExternalPtr"]},{"text":"impl <a class=\"trait\" href=\"extendr_api/trait.DerefMut.html\" title=\"trait extendr_api::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"extendr_api/wrapper/integers/struct.Integers.html\" title=\"struct extendr_api::wrapper::integers::Integers\">Integers</a>","synthetic":false,"types":["extendr_api::wrapper::integers::Integers"]},{"text":"impl <a class=\"trait\" href=\"extendr_api/trait.DerefMut.html\" title=\"trait extendr_api::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"extendr_api/wrapper/logicals/struct.Logicals.html\" title=\"struct extendr_api::wrapper::logicals::Logicals\">Logicals</a>","synthetic":false,"types":["extendr_api::wrapper::logicals::Logicals"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()