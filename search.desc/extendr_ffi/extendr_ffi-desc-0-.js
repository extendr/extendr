searchState.loadedDescShard("extendr_ffi", 0, "Low level bindings to R’s C API\nmake “any” args work\nbyte code\nbuiltin non-special forms\n“scalar” string type (internal only)\nclosures\ncomplex variables\nCalled with a variable argument set after casting to a …\ndot-dot-dot object\nenvironments\nexpressions vectors\nexternal pointer\n, MAYBE\nnode released by GC\nClosure or Builtin\ninteger vectors\nlanguage constructs (special lists)\nlogical vectors\nlists of dotted pairs\nfresh node created in new page\nnil = NULL\nNo value.\nNo value.\nS4 non-vector\npromises: [un]evaluated closure arguments\nPARSE_NULL will not be returned by R_ParseVector\nraw bytes\nreal variables\nThe base environment; formerly R_NilValue\nThe (fake) namespace for base\n“base”\n“” as a STRSXP\n“” as a CHARSXP\n“{”\n“[[”\n“[”\nFinalization interface\nsrcref related functions\nThese are very similar to those in Rdynpriv.h, but we …\nC stack limit\n“class”\n“.Device”\n“dimnames”\n“dim”\n“$”\n“…”\n“::”\n“drop”\nAn empty environment at the root of the environment tree\n“eval”\n“function”\nsrcref related functions\nThe “global” environment\nNA_STRING is a SEXP, so defined in Rinternals.h\n“.Last.value”\n“levels”\nExternal pointer interface\nMissing argument marker\n“mode”\nNA_INTEGER:= INT_MIN currently\nIEEE NaN\nNA_REAL: IEEE\n“na.rm”\nNA_STRING as a CHARSXP\n“name”\n“names”\n“.<strong>NAMESPACE</strong>.”\nRegistry for registered namespaces\nIEEE -Inf\nEnvironment and Binding Features\nThe nil object\n“package”\nIEEE Inf\npreserve objects across GCs\n“previous”\n“quote”\n“row.names”\n“.Random.seed”\n“sort.list”\n“source”\n“spec”\nCurrent srcref, for debuggers\n“:::”\n“tsp”\nUnbound marker\n“.Generic”\n“.Method”\n“.defined”\n“.packageName”\n“.target”\ntype for length of (standard, not long) vectors etc\nR_xlen_t is defined as int on 32-bit platforms, and that …\nA C type with enumeration constants FALSE and TRUE defined.\nR 4.3 redefined <code>Rcomplex</code> to a union for compatibility with …\nEnum of possible SEXP types\nspecial forms\nstring vectors\nsymbols\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\n, MAYBE\nReturns the SEXPTYPE of <code>x</code>\ngeneric vectors\nweak reference\nALTREP support\nBackport functions\ncetype_t is an identifier reseved by POSIX, but it is well …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGraphics Engine support\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStatics representing R Symbols\nReturns a nonzero value if x is a “compact …\nReturns the ALTREP class object containing the methods set …\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nMust return <code>x[i]</code> for the 0-based index i. The default …\nMust copy up to n elements, starting at 0-based index i, …\nMust return <code>x[i]</code> for the 0-based index i. The default …\nMust copy up to n elements, starting at 0-based index i, …\nMust return one of the sortedness constants: SORTED_DECR, …\nMust calculate and return the specified summary of the …\nMust calculate and return the specified summary of the …\nMust return 1 if x is known not to store any missing …\nMust calculate and return the specified summary of the …\nMust return <code>x[[i]]</code> for the 0-based index i or raise an …\nMust set <code>x[[i]] &lt;- v</code> for the 0-based index i, altering x, …\nMust return <code>x[i]</code> for the 0-based index i. The default …\nMust copy up to n elements, starting at 0-based index i, …\nMust return one of the sortedness constants: SORTED_DECR, …\nMust return 1 if x is known not to store any missing …\nMust calculate and return the specified summary of the …\nMust return <code>x[i]</code> for the 0-based index i. The default …\nMust copy up to n elements, starting at 0-based index i, …\nMust return <code>x[i]</code> for the 0-based index i. The default …\nMust copy up to n elements, starting at 0-based index i, …\nMust return one of the sortedness constants: SORTED_DECR, …\nMust calculate and return the specified summary of the …\nMust calculate and return the specified summary of the …\nMust return 1 if x is known not to store any missing …\nMust calculate and return the specified summary of the …\nMust return an R value of SEXPTYPE type containing the …\nLike the Duplicate method above, but must duplicate the …\nMust return a copy (see duplicate) of x that can be …\nThis method will be called from .Internal(inspect(…)) …\nMust return the length of the compact-representation …\nMust prepare and return a representation of x that can be …\nLike the Unserialize method above, but must also take care …\nMust construct and return an ALTREP object of the given …\nReturns one of the two ALTREP instance variables belonging …\nReturns one of the two ALTREP instance variables belonging …\nReturns a nonzero value if x is an ALTREP value whose …\nMust return <code>x[i]</code> (for 0-based i) or signal an error. The …\nMust return one of the sortedness constants: SORTED_DECR, …\nMust return 1 if x is known not to store any missing …\nMust set <code>x[i] &lt;- v</code> (for 0-based i), even if it’s not …\nMust return a pointer to the start of the buffer of type …\nLike the Dataptr method above, but the method may return a …\nMust allocate and return a new vector containing the …\nAllocates, registers and returns an ALTREP class with the …\nAllocates, registers and returns an ALTREP class with the …\nAllocates, registers and returns an ALTREP class with the …\nAllocates, registers and returns an ALTREP class with the …\nAllocates, registers and returns an ALTREP class with the …\nAllocates, registers and returns an ALTREP class with the …\nAllocates, registers and returns an ALTREP class with the …\nAllocates, constructs and returns a compact-representation …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the corresponding ALTREP instance variable of ax to …\nSets the corresponding ALTREP instance variable of ax to …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSets the function pointer inside the ALTREP class object. …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAccess a DATAPTR\nReturn the body of a closure\nReturn the environment of a closure\nAccess a closure’s arguments\nReturns the enclosing environment of env, which will …\nReturns a variable from an environment\nReturns the value of the requested variable in an …\nA pointer to the end of the display list to avoid …\nA pointer to the end of the display list to avoid …\nWhen replaying the display list, the graphics engine …\nCopy system state information to the current device. This …\nThis event gives the registered system a chance to undo …\nIn response to this event, the registered graphics system …\nRestore the system state that is saved by …\nThis is sent by the graphics engine prior to replaying the …\nCreate a snapshot of the system state that is sufficient …\nThis is sent by the graphics engine prior to initialising …\nThe device wants to scale the current pointsize (for …\nNo value.\nSome value of type <code>T</code>.\nIs a device appending a path ?\nIs a device appending a path ?\nper-device setting for ‘ask’ (use NewFrameConfirm)\nper-device setting for ‘ask’ (use NewFrameConfirm)\nbottom raster coordinate\nbottom raster coordinate\nAn array of function pointers, one per graphics system that\ncan the gamma factor be modified?\ncan the gamma factor be modified?\nDevice-level clipping\nDevice-level clipping\ncan the device generate idle events\ncan the device generate idle events\ncan the device generate keyboard events\ncan the device generate keyboard events\ncan the device generate mousedown events\ncan the device generate mousedown events\ncan the device generate mousemove events\ncan the device generate mousemove events\ncan the device generate mouseup events\ncan the device generate mouseup events\nCan do at least some horiz adjust of text 0 = none, 1 = …\nCan do at least some horiz adjust of text 0 = none, 1 = …\nR only has the notion of a rectangular clipping region\nR only has the notion of a rectangular clipping region\nCharacter size in rasters; [0]=x, [1]=y\nCharacter size in rasters; [0]=x, [1]=y\nStuff that the devices can see (and modify). All detailed …\nStuff that the devices can see (and modify). All detailed …\nThis can be used to OVERRIDE canClip so that graphics …\nThis can be used to OVERRIDE canClip so that graphics …\npointer to device specific parameters\npointer to device specific parameters\nThis should match R_GE_version, BUT it does not have to. …\nThis should match R_GE_version, BUT it does not have to. …\nHas the device received any output?\nHas the device received any output?\ndisplay list\ndisplay list\ntoggle for initial display list status\ntoggle for display list status\ntoggle for initial display list status\ntoggle for display list status\nThis is an environment holding event handlers.\nThis is an environment holding event handlers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n(initial) Device Gamma Correction\n(initial) Device Gamma Correction\nStuff about the device that only graphics systems see. The …\nStuff about the device that only graphics systems see. The …\ndevice_getEvent is no longer used, but the slot is kept …\ndevice_getEvent is no longer used, but the slot is kept …\nThis is set while getGraphicsEvent is actively looking for …\nThis is set while getGraphicsEvent is actively looking for …\nand strWidthUTF8\nand strWidthUTF8\n1 = no, 2 = yes\n1 = no, 2 = yes\n1 = no, 2 = yes\n1 = no, 2 = yes\n1 = no, 2 = yes, 3 = except for missing values\n1 = no, 2 = yes, 3 = except for missing values\n1 = no, 2 = yes\n1 = no, 2 = yes\n1 = no, 2 = fully, 3 = semi\n1 = no, 2 = fully, 3 = semi\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInches per raster; [0]=x, [1]=y\nInches per raster; [0]=x, [1]=y\nleft raster coordinate\nleft raster coordinate\nShould a graphics call be stored on the display list? Set …\nShould a graphics call be stored on the display list? Set …\nArea for future expansion. By zeroing this, devices are …\nArea for future expansion. By zeroing this, devices are …\nright raster coordinate\nright raster coordinate\nThe last element of the display list just prior to when …\nThe last element of the display list just prior to when …\nsets par(“fg”), par(“col”) and gpar(“col”)\nsets par(“fg”), par(“col”) and gpar(“col”)\nsets par(“bg”) and gpar(“fill”)\nsets par(“bg”) and gpar(“fill”)\nDevice initial settings / /* These are things that the …\nDevice initial settings / /* These are things that the …\nAn array of information about each graphics system that …\ntop raster coordinate\ntop raster coordinate\nIs rotated text good enough to be preferable to Hershey in …\nIs rotated text good enough to be preferable to Hershey in …\nx character addressing offset - unused\nx character addressing offset - unused\ny character addressing offset\ny character addressing offset\n1/2 interline space as frac of line height\n1/2 interline space as frac of line height\n“base”\n“” as a STRSXP\n“” as a CHARSXP\n“{”\n“[[”\n“[”\n“class”\n“.Device”\n“dimnames”\n“dim”\n“$”\n“…”\n“::”\n“drop”\n“eval”\n“function”\n“.Last.value”\n“levels”\n“mode”\n“na.rm”\n“name”\n“names”\n“.<strong>NAMESPACE</strong>.”\n“package”\n“previous”\n“quote”\n“row.names”\n“.Random.seed”\n“sort.list”\n“source”\n“spec”\n“:::”\n“tsp”\n“.Generic”\n“.Method”\n“.defined”\n“.packageName”\n“.target”")