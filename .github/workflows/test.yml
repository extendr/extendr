name: Tests

on: [push, pull_request]

jobs:
  tests:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (R-${{ matrix.config.r }} rust-${{ matrix.config.rust-version }})
            
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', rust-version: 'stable-x86_64-pc-windows-gnu'}
          - {os: macOS-latest,   r: 'release', rust-version: 'stable'}
          - {os: ubuntu-20.04,   r: 'release', rust-version: 'stable', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: 'release', rust-version: 'beta', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: 'devel',   rust-version: 'nightly', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.rust-version }}
          default: true

#      - name: Set up Rust targets on Windows
#        if: runner.os == 'Windows'
#        run: |
#          rustup target add x86_64-pc-windows-gnu

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1
      
      - name: Build
        run: cargo build

      - name: Run tests
        run: cargo test -- --nocapture --test-threads=1

      - name: Install R dependencies for integration testing
        run: install.packages(c('rmarkdown', 'testthat', 'rcmdcheck'))
        shell: Rscript {0}
        
      - name: Cache installed R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Run R integration tests
        id: r_integration_tests
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(path = "tests/extendrtests", args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}
        
      - name: Upload check results from R integration tests
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
