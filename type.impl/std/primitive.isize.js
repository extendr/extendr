(function() {var type_impls = {
"extendr_api":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SignedIndex-for-isize\" class=\"impl\"><a href=\"#impl-SignedIndex-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/prelude/trait.SignedIndex.html\" title=\"trait extendr_api::prelude::SignedIndex\">SignedIndex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"extendr_api/prelude/trait.SignedIndex.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> = 9_223_372_036_854_775_807isize</h4></section></summary><div class='docblock'>Maximum representable value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method trait-impl\"><a href=\"#method.truncate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/prelude/trait.SignedIndex.html#tymethod.truncate\" class=\"fn\">truncate</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Truncate <code>value</code> to type <a href=\"extendr_api/prelude/trait.SignedIndex.html\" title=\"trait extendr_api::prelude::SignedIndex\"><code>Self</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zx\" class=\"method trait-impl\"><a href=\"#method.zx\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/prelude/trait.SignedIndex.html#tymethod.zx\" class=\"fn\">zx</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Zero extend <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sx\" class=\"method trait-impl\"><a href=\"#method.sx\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/prelude/trait.SignedIndex.html#tymethod.sx\" class=\"fn\">sx</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Sign extend <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum_nonnegative\" class=\"method trait-impl\"><a href=\"#method.sum_nonnegative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/prelude/trait.SignedIndex.html#method.sum_nonnegative\" class=\"fn\">sum_nonnegative</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Sum nonnegative values while checking for overflow.</div></details></div></details>","SignedIndex","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26BigInt%3E-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#141\">source</a><a href=\"#impl-TryFrom%3C%26BigInt%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#141\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&BigInt>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26BigUint%3E-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#428\">source</a><a href=\"#impl-TryFrom%3C%26BigUint%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#428\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&BigUint>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26Robj%3E-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"src/extendr_api/robj/try_from_robj.rs.html#105\">source</a><a href=\"#impl-TryFrom%3C%26Robj%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"extendr_api/robj/struct.Robj.html\" title=\"struct extendr_api::robj::Robj\">Robj</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/extendr_api/robj/try_from_robj.rs.html#105\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(robj: &amp;<a class=\"struct\" href=\"extendr_api/robj/struct.Robj.html\" title=\"struct extendr_api::robj::Robj\">Robj</a>) -&gt; <a class=\"type\" href=\"extendr_api/error/type.Result.html\" title=\"type extendr_api::error::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Convert a numeric object to an integer value.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"extendr_api/error/enum.Error.html\" title=\"enum extendr_api::error::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<&Robj>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBigInt%3E-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#141\">source</a><a href=\"#impl-TryFrom%3CBigInt%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#141\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<BigInt>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBigUint%3E-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#428\">source</a><a href=\"#impl-TryFrom%3CBigUint%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#428\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<BigUint>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CRobj%3E-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"src/extendr_api/robj/try_from_robj.rs.html#428-439\">source</a><a href=\"#impl-TryFrom%3CRobj%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"extendr_api/robj/struct.Robj.html\" title=\"struct extendr_api::robj::Robj\">Robj</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"extendr_api/error/enum.Error.html\" title=\"enum extendr_api::error::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/extendr_api/robj/try_from_robj.rs.html#428-439\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(robj: <a class=\"struct\" href=\"extendr_api/robj/struct.Robj.html\" title=\"struct extendr_api::robj::Robj\">Robj</a>) -&gt; <a class=\"type\" href=\"extendr_api/error/type.Result.html\" title=\"type extendr_api::error::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Robj>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci128%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#399\">source</a></span><a href=\"#impl-TryFrom%3Ci128%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#399\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i128>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci32%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#398\">source</a></span><a href=\"#impl-TryFrom%3Ci32%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#398\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i32>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci64%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#398\">source</a></span><a href=\"#impl-TryFrom%3Ci64%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#398\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i64>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#397\">source</a></span><a href=\"#impl-TryFrom%3Cu128%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#397\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u128>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu16%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#396\">source</a></span><a href=\"#impl-TryFrom%3Cu16%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#396\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u16>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#396\">source</a></span><a href=\"#impl-TryFrom%3Cu32%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#396\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u32>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#397\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#397\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","extendr_api::prelude::Ixs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cusize%3E-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#327\">source</a></span><a href=\"#impl-TryFrom%3Cusize%3E-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/num.rs.html#327\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"extendr_api/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a> as <a class=\"trait\" href=\"extendr_api/trait.TryFrom.html\" title=\"trait extendr_api::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" title=\"type extendr_api::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"extendr_api/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<usize>","extendr_api::prelude::Ixs"],["<section id=\"impl-ScalarOperand-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/impl_ops.rs.html#46\">source</a><a href=\"#impl-ScalarOperand-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"extendr_api/prelude/trait.ScalarOperand.html\" title=\"trait extendr_api::prelude::ScalarOperand\">ScalarOperand</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a></h3></section>","ScalarOperand","extendr_api::prelude::Ixs"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()